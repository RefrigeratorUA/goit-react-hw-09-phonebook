{"version":3,"sources":["components/Notification/Notification.js","components/RegistrationForm/RegistrationForm.js","views/RegisterView.js"],"names":["Notification","state","errorMessage","this","props","onView","message","setState","setTimeout","prevProps","prevState","className","Component","RegistrationForm","name","email","password","handleChange","event","target","value","handleSubmit","preventDefault","onRegister","showNotification","CSSTransition","in","classNames","timeout","unmountOnExit","onSubmit","type","onChange","disabled","mapDispatchToProps","authOperations","register","connect","RegisterView"],"mappings":"oOA2BeA,E,4MAxBbC,MAAQ,CACNC,aAAc,I,uDAGhB,WAAqB,IAAD,EACUC,KAAKC,MAAzBC,EADU,EACVA,OAAQC,EADE,EACFA,QAChBH,KAAKI,SAAS,CAAEL,aAAcI,IAC9BE,YAAW,kBAAMH,EAAO,MAAK,O,gCAE/B,SAAmBI,EAAWC,GAAY,IAAD,EACXP,KAAKC,MAAzBC,EAD+B,EAC/BA,OAAQC,EADuB,EACvBA,QACRJ,EAAiBC,KAAKF,MAAtBC,aACR,GAAII,GAAWA,IAAYJ,EAEzB,OADAC,KAAKI,SAAS,CAAEL,aAAcI,IACvBD,EAAO,M,oBAIlB,WAAU,IACAH,EAAiBC,KAAKF,MAAtBC,aACR,OAAO,qBAAKS,UAAU,QAAf,SAAwBT,Q,GArBRU,c,kKCKrBC,E,4MACJZ,MAAQ,CACNa,KAAM,GACNC,MAAO,GACPC,SAAU,GACVd,aAAc,I,EAGhBe,aAAe,SAAAC,GAAU,IAAD,EACEA,EAAMC,OAAtBL,EADc,EACdA,KAAMM,EADQ,EACRA,MACd,EAAKb,SAAL,eAAiBO,EAAOM,K,EAG1BC,aAAe,SAAAH,GACbA,EAAMI,iBADgB,MAEY,EAAKrB,MAA/Ba,EAFc,EAEdA,KAAMC,EAFQ,EAERA,MAAOC,EAFC,EAEDA,SACbO,EAAe,EAAKnB,MAApBmB,WAER,OAAKT,EACAC,EACAC,GAELO,EAAW,CAAET,OAAMC,QAAOC,kBAC1B,EAAKT,SAAS,CAAEO,KAAM,GAAIC,MAAO,GAAIC,SAAU,MAHzB,EAAKQ,iBAAiB,yBADzB,EAAKA,iBAAiB,sBADvB,EAAKA,iBAAiB,2B,EAQ1CA,iBAAmB,SAAAtB,GACjB,EAAKK,SAAS,CAAEL,kB,4CAGlB,WAAU,IAAD,EACyCC,KAAKF,MAA7Ca,EADD,EACCA,KAAMC,EADP,EACOA,MAAOC,EADd,EACcA,SAAUd,EADxB,EACwBA,aAC/B,OACE,qCACE,qBAAKS,UAAU,uBAAf,SACE,cAACc,EAAA,EAAD,CAAeC,KAAMxB,EAAcyB,WAAW,eAAeC,QAAS,IAAKC,eAAa,EAAxF,SACE,cAAC7B,EAAA,EAAD,CAAcK,OAAQF,KAAKqB,iBAAkBlB,QAASJ,QAI1D,uBAAM4B,SAAU3B,KAAKkB,aAArB,UACE,yCAEE,uBACEV,UAAU,QACVoB,KAAK,OACLjB,KAAK,OACLM,MAAON,EACPkB,SAAU7B,KAAKc,kBAGnB,0CAEE,uBACEN,UAAU,QACVoB,KAAK,QACLjB,KAAK,QACLM,MAAOL,EACPiB,SAAU7B,KAAKc,kBAGnB,6CAEE,uBACEN,UAAU,QACVoB,KAAK,WACLjB,KAAK,WACLM,MAAOJ,EACPgB,SAAU7B,KAAKc,kBAGnB,uBACA,wBACEN,UAAU,gBACVoB,KAAK,SACLE,UAAYnB,IAASC,IAAUC,KAAed,EAHhD,gC,GAxEqBU,aAuFzBsB,EAAqB,CACzBX,WAAYY,IAAeC,UAGdC,cAAQ,KAAMH,EAAdG,CAAkCxB,GCvFlCyB,UATM,WACnB,OACE,qCACE,uDACA,cAAC,EAAD","file":"static/js/register-view.817258c1.chunk.js","sourcesContent":["import { Component } from 'react';\n\nclass Notification extends Component {\n  state = {\n    errorMessage: '',\n  };\n\n  componentDidMount() {\n    const { onView, message } = this.props;\n    this.setState({ errorMessage: message });\n    setTimeout(() => onView(''), 2000);\n  }\n  componentDidUpdate(prevProps, prevState) {\n    const { onView, message } = this.props;\n    const { errorMessage } = this.state;\n    if (message && message !== errorMessage) {\n      this.setState({ errorMessage: message });\n      return onView('');\n    }\n  }\n\n  render() {\n    const { errorMessage } = this.state;\n    return <div className=\"alert\">{errorMessage}</div>;\n  }\n}\n\nexport default Notification;\n","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { CSSTransition } from 'react-transition-group';\nimport Notification from '../Notification';\nimport '../Notification/Notification.css';\nimport { authOperations } from '../../redux/auth';\n\nclass RegistrationForm extends Component {\n  state = {\n    name: '',\n    email: '',\n    password: '',\n    errorMessage: '',\n  };\n\n  handleChange = event => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { name, email, password } = this.state;\n    const { onRegister } = this.props;\n\n    if (!name) return this.showNotification('Please enter user name');\n    if (!email) return this.showNotification('Please enter email');\n    if (!password) return this.showNotification('Please enter password');\n\n    onRegister({ name, email, password });\n    this.setState({ name: '', email: '', password: '' });\n  };\n\n  showNotification = errorMessage => {\n    this.setState({ errorMessage });\n  };\n\n  render() {\n    const { name, email, password, errorMessage } = this.state;\n    return (\n      <>\n        <div className=\"Notification-wrapper\">\n          <CSSTransition in={!!errorMessage} classNames=\"Notification\" timeout={250} unmountOnExit>\n            <Notification onView={this.showNotification} message={errorMessage} />\n          </CSSTransition>\n        </div>\n\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            Name\n            <input\n              className=\"input\"\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={this.handleChange}\n            ></input>\n          </label>\n          <label>\n            Email\n            <input\n              className=\"input\"\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={this.handleChange}\n            ></input>\n          </label>\n          <label>\n            Password\n            <input\n              className=\"input\"\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={this.handleChange}\n            ></input>\n          </label>\n          <br />\n          <button\n            className=\"btn-phonebook\"\n            type=\"submit\"\n            disabled={(!name && !email && !password) || !!errorMessage}\n          >\n            Register\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\n// const mapStateToProps = state => ({ items: contactsSelectors.getAllContacts(state) });\n\nconst mapDispatchToProps = {\n  onRegister: authOperations.register,\n};\n\nexport default connect(null, mapDispatchToProps)(RegistrationForm);\n","import RegistrationForm from '../components/RegistrationForm';\n\nconst RegisterView = () => {\n  return (\n    <>\n      <h1>Registration new user</h1>\n      <RegistrationForm />\n    </>\n  );\n};\n\nexport default RegisterView;\n"],"sourceRoot":""}